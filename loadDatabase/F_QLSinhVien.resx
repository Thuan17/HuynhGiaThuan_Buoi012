<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnXoa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALAAAACwARRqq2kAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAACW0lEQVRIS+2UX0hTYRjGD7pJSFgIdZNBdNuN0J0WXjiM0f7ptgbn4ILIFTRGBRlFrlOIqzXpj261
        aIneZNNQhEZSsf7IUpBt3VREXYpR0Y0MEeaevu/wHTqb57jtojsfeDjv4Xzv7/l4+c7HaUkURZ3FYgma
        zeaQ0+ms2xXG9h0hfK+5DjQOIsuJ0LGl1YtA641G45LBYAB1h7lrqeEWlrlrgOydIXxly6uTx+PR22y2
        BQq2Wq03OrqEgcbAypoSTq3vx/q+EWxjbZWJjKWG5/lnxGt2u/0MHUtDsHjn1Lp+FPbcRTdrq1yCIDgI
        HOTZeSCOuv1RLKrBm4bAsxYOwr0muMOncHx4Bu7hHNxDs+zTRhGwiwQUHO4eU2sc061Pgb1h9Z2jO9JG
        gBlibDCZhAQsFTkttS7B/aL9/ucfFC6bhpSOhew6oQqn1gqgY5F3rvThOFaOTeHS4zQMslN3Fr6kBlNQ
        czKZVD/CLeMYK4W3TwDBeSCWKXbfW+D8S3VHo9AzZLEIMKeEt00gpwYvFyAmNX7CQ+OIKAJ+++cQKQKn
        C/8CkusKaEFRbxLgjKOWjelnSxzNZNZ+Geh/MAPv5YBUDzz5AJvDJcFOj37CEVMnziZWywfIOshmqAy4
        GBpFj69Xqq8+fI6jJrMEOxmZk64T3/SfygNkbQWU1VZAWf33gFgafXLAzUnyEpmS6tuJb+C9VySYd3IZ
        Dl8A52bz1Qc8yuKEHFBqrbuo9zXyrL28xj5iN4H9KoVTawWI7/CetVemkQyaCfBNLIvVzQIuvEKewsVF
        1LNWIo77C4ji7spOhh+LAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALAAAACwARRqq2kAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADZElEQVRIS72VW0hTYQDHVz3VQ+C0C4JBZBQl26Ieii7QQ2XZTXdOFpGUmUXOiV0psyn1UERYkaT0
        4OUsU6EU3ZzaGqypUXnLZTsGdvGyYZdlRdjF/PftnG/m1jlFRP3hx/nO7ff/dvbtTPHfo+Qerwrh+Aol
        x/OEp75xqLErlp7+u4Qa+QwihQx5CmAcvfTPE1bMLyKSb0HSAEI41zZ6+Z8npLjrkpRUXdqCGcYOYTyt
        4KE1KWrjtOSozbMS5saGsiw7gd7++xBB3Vjx9CInkmsb0dtjQWunCXHxGUjRsEhVM6PoVNo3+6I2b6GK
        X0dpdN2aXdaJK/ftuN5iRfczC957agRMeWcCxGPRqbUf05ewE6lGOuH5zZPIrD2RJR0YdP8Q++EMGZJy
        P0mqDTOpSjpEnik8mmIX8pusPxXknMxCru4gbNwFZK/fjaPLt+NCoh6tdVdxaPG2z77vhaqkQ+R9QgFh
        akE7ztvrMdhvEihrMsFUa8Sz9lKh7E1PFV4+ryTnzML+A1MevL3Vh6lKImRtE/EXf8G802bE6S/inVuc
        /QFDDrx9okyOD+6aa9QmHWUxf29K4SNs2mIYfa45ianISzskjM/t2A/Pkwppuaem9uOr+nCqkg6ZefTq
        xPOj8mBSVFo4bQUyBeYUqpFPCvnR6DTsVym5n6LM41IFH7zu6hlUIx+9io2Wkgag0eL6KQMGuis/v3Ob
        hwb7q/n3/TVLqeLX0WkYVlIaRMKyXXj9onrYN3tnl+nm5PJOpe9+2FdHwLEuDY61p+FYHwsoAl+KenXc
        SiIYCRb6iY7PRsTlJmGVnbXfhrm9HkyVsD+cXlnQNuKI+UQKAEcMQdha0bxhEtWL2R+1NUKvYTbp1Eym
        XsXkpmqYEr2aKV9wmGvzL+FRijqFbWRJK7x2RpTejQcGrLSAcGdtDlXLJ+yaayERjQTIx7DzRpkoa94D
        OE8Ab1uANj0pY33H31KNfEKMrstSYj9pFYViQS8pGrABQ27AYyFlx3zHh4Gs8VQlHSK5HSwdy4oyG8jz
        F0vubQde2sWxQIyDauRDJI5gaTClFoMobNgIdBzxFwyhcZ2GauQTxvFzyN/kXiXXla808k3kleIiUg/B
        S3hKeDCdc1aV12baBu3aHvJpXhG5BQ1r5lPFv45C8R0LHXQH0rLsQAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnTim.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        rAAAAKwBhgk01AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAALqSURBVEhLrZRN
        SFRRFMdFd9G6RSpJm9wULWxTOzcFuqjEIWihoMz7mjdvaiJKDEbTmtBgkkpHilZKKYZIZCB+o0aWOooW
        Vo4fqYlNQn7MvPm6/e9wB3S8Oor+4c8M757zO+eee99LiJUoiscEQSiGB+Al2AfP4HkDbLDZbIksdP8y
        Go1mwFZFzfpXedHSa2791mVpn+lRm4c7pUc1Q4IohhDjgk+zlL0L4GcUoDZ+7LSMhNYsrjDZ5iH9u1xW
        NRppQhQzWWp8IUGlcK3ndz8XvNW6XFVHx+dBkTSG2Fls5v9MtHMAisZC5MFEiAfe7DXpbokbea8ZZmch
        qFiwWD10LDdHw2Rw3k/eugM86Babuxf6kBuWZTmVofhC0IDy8l0vTaqeDJKxBZ3QQrFAjjcERV3HBASG
        4gsFPOYPk9006f10gDRPxe8+atlW8RUFKhmKLxTQtY7ZyA7aZ/2k/sc+CtifDyPfyVB8IWBObRmJHHAT
        um+b8XNhPLODvs9QfCGgSa6o/UIT6O2ZXvKR0vG4t4hYhoMLuNphjCibofhCwDVBlIL0JaKJ9AxacRbb
        gDFWG/o70ZwHb/URhuIrNzc3CYFjUnmVC4l6LIjrz94JUTF50dxthtldkiSdQZFV+oYCwP9MRE3h1jtL
        hYWFy2juLGlISGKY3YVuMumW6cFp3Yv9mivs3QzWRoKLpjd9XYJs8hYUFPwxGAzEnJflWa9OmffWplxn
        mN2FnZxEkUY4LKnamlTyeFyyVw9JRaU/6YHi+QpmXpSTk5NhzsteWX56wutzJhM4uOciVNhNGkAKfp8A
        +gq24/8VfBaO0nViS0jccKbOMXjUAb022RABHIb0mpSrgPpjiuxvJ/G0U5HByowbLOTgii3SVnaByKKR
        1BVfdLCQgytapKP8PMHHlViVfDLlSA/qzuOXWcjB9cl+TlIkI7llyidux6nouH6x5cNR/b1LD6cd6YHo
        uOA5tnR4AjQLdlO4z5mc9R+lrCtjNncoowAAAABJRU5ErkJggg==
</value>
  </data>
</root>